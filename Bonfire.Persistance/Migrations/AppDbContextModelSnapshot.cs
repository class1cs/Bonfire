// <auto-generated />
using System;
using Bonfire.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bonfire.Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bonfire.Core.Entities.DirectChat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("DirectChats");
                });

            modelBuilder.Entity("Bonfire.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DirectChatId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("SentTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("DirectChatId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Bonfire.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DirectChatUser", b =>
                {
                    b.Property<Guid>("DirectChatsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ParticipantsId")
                        .HasColumnType("char(36)");

                    b.HasKey("DirectChatsId", "ParticipantsId");

                    b.HasIndex("ParticipantsId");

                    b.ToTable("DirectChatUser");
                });

            modelBuilder.Entity("Bonfire.Core.Entities.Message", b =>
                {
                    b.HasOne("Bonfire.Core.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bonfire.Core.Entities.DirectChat", null)
                        .WithMany("ChatHistory")
                        .HasForeignKey("DirectChatId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("DirectChatUser", b =>
                {
                    b.HasOne("Bonfire.Core.Entities.DirectChat", null)
                        .WithMany()
                        .HasForeignKey("DirectChatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bonfire.Core.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bonfire.Core.Entities.DirectChat", b =>
                {
                    b.Navigation("ChatHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
